
🎯 Dataset Analysis 🎯

🔹 Dataset Shape & Data Types:

Train data shape: (60000, 28, 28), Type: uint8
Test data shape: (10000, 28, 28), Type: uint8
Train labels shape: (60000,), Type: uint8
Test labels shape: (10000,), Type: uint8

🔹 Missing Values:

Train data missing values: 0
Test data missing values: 0
Train labels missing values: 0
Test labels missing values: 0

🔹 Statistical Summary (Pixel Values):

Extreme-Range: 0 to 255
Mean-Min: 0.0
Mean-Max: 254.90001666666666
Mean-Mean: 33.318421449829934
Mean-Std: 76.83453865617214

🎯 Preprocess Dataset 🎯

🔹 Data Types Before Preprocessing:

Train Data Type: uint8
Test Data Type: uint8
Train Labels Type: uint8
Test Labels Type: uint8

🔹 Data Shapes Before Preprocessing:

Train Data Shape: (60000, 28, 28)
Test Data Shape: (10000, 28, 28)
Train Labels Shape: (60000,)
Test Labels Shape: (10000,)

🔹 Data Types After Preprocessing:

Train Data Type: float32
Test Data Type: float32
Train Labels Type: float64
Test Labels Type: float64

🔹 Data Shapes After Preprocessing:

Train Data Shape: (60000, 28, 28, 1)
Test Data Shape: (10000, 28, 28, 1)
Train Labels Shape: (60000, 10)
Test Labels Shape: (10000, 10)

🎯 Dataset Analysis 🎯

🔹 Dataset Shape & Data Types:

Train data shape: (60000, 28, 28, 1), Type: float32
Test data shape: (10000, 28, 28, 1), Type: float32
Train labels shape: (60000, 10), Type: float64
Test labels shape: (10000, 10), Type: float64

🔹 Missing Values:

Train data missing values: 0
Test data missing values: 0
Train labels missing values: 0
Test labels missing values: 0

🔹 Statistical Summary (Pixel Values):

Extreme-Range: 0.0 to 1.0
Mean-Min: 0.0
Mean-Max: 0.9996079802513123
Mean-Mean: 0.13066047430038452
Mean-Std: 0.3013119101524353

🚀 Launching m1 (1/10) ...

🎯 Build Model 🎯

Model: "m1"
┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃ Layer (type)            ┃ Output Shape      ┃   Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ input_layer             │ (None, 28, 28, 1) │         0 │
│ (InputLayer)            │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d (Conv2D)         │ (None, 28, 28,    │       416 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu (ReLU)            │ (None, 28, 28,    │         0 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d           │ (None, 14, 14,    │         0 │
│ (MaxPooling2D)          │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_1 (Conv2D)       │ (None, 14, 14,    │     4,640 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_1 (ReLU)          │ (None, 14, 14,    │         0 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_1         │ (None, 7, 7, 32)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_2 (Conv2D)       │ (None, 7, 7, 64)  │    18,496 │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_2 (ReLU)          │ (None, 7, 7, 64)  │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_2         │ (None, 4, 4, 64)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ flatten (Flatten)       │ (None, 1024)      │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense (Dense)           │ (None, 128)       │   131,200 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_1 (Dense)         │ (None, 10)        │     1,290 │
└─────────────────────────┴───────────────────┴───────────┘
 Total params: 156,042 (609.54 KB)
 Trainable params: 156,042 (609.54 KB)
 Non-trainable params: 0 (0.00 B)

🔹 Inference Time:

0.038576 seconds (m1)

🎯 Train Model 🎯
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 

🎯 Evaluate Model 🎯
WARNING:absl:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.

🔹 Evaluation Result:

[0.027996044605970383, 0.9908000230789185]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m19s[0m 63ms/step[1m 18/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step  [1m 34/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 51/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 66/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 84/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 99/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m118/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m137/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m157/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m176/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m196/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step[1m215/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 3ms/step[1m235/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step[1m253/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 3ms/step[1m271/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step[1m288/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step[1m306/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🔹 (Shifted) Evaluation Result:

[0.30610623955726624, 0.9034000039100647]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m5s[0m 18ms/step[1m 17/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step [1m 33/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 50/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 66/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 84/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m101/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m119/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m136/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m154/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m169/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m187/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m205/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 3ms/step[1m225/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step[1m244/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step[1m263/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 3ms/step[1m267/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step[1m273/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step[1m289/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step[1m308/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 (Shifted) Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🎯 Add Experiment Result 🎯

🔹 Experiment Results:

  #: m1
  Time: 12:23:07
  Layers-Count: 13
  Optimizer: Adam
  Fin-Test-Loss: 0.027996044605970383
  Fin-Test-Acc: 0.9908000230789185
  Shift-Test-Loss: 0.30610623955726624
  Shift-Test-Acc: 0.9034000039100647

🚀 Launching m1 (2/10) ...

🎯 Build Model 🎯

Model: "m1"
┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃ Layer (type)            ┃ Output Shape      ┃   Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ input_layer_1           │ (None, 28, 28, 1) │         0 │
│ (InputLayer)            │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_3 (Conv2D)       │ (None, 28, 28,    │       416 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_3 (ReLU)          │ (None, 28, 28,    │         0 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_3         │ (None, 14, 14,    │         0 │
│ (MaxPooling2D)          │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_4 (Conv2D)       │ (None, 14, 14,    │     4,640 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_4 (ReLU)          │ (None, 14, 14,    │         0 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_4         │ (None, 7, 7, 32)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_5 (Conv2D)       │ (None, 7, 7, 64)  │    18,496 │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_5 (ReLU)          │ (None, 7, 7, 64)  │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_5         │ (None, 4, 4, 64)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ flatten_1 (Flatten)     │ (None, 1024)      │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_2 (Dense)         │ (None, 128)       │   131,200 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_3 (Dense)         │ (None, 10)        │     1,290 │
└─────────────────────────┴───────────────────┴───────────┘
 Total params: 156,042 (609.54 KB)
 Trainable params: 156,042 (609.54 KB)
 Non-trainable params: 0 (0.00 B)

🔹 Inference Time:

0.014511 seconds (m1)

🎯 Train Model 🎯
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 

🎯 Evaluate Model 🎯
WARNING:absl:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.

🔹 Evaluation Result:

[0.023941755294799805, 0.9922999739646912]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m17s[0m 57ms/step[1m 17/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step  [1m 33/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 50/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 67/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 84/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 99/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m117/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m131/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m144/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m161/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m179/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m192/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step[1m212/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 3ms/step[1m231/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step[1m250/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step[1m265/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 3ms/step[1m282/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step[1m296/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step[1m310/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🔹 (Shifted) Evaluation Result:

[0.29281383752822876, 0.9199000000953674]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m4s[0m 15ms/step[1m 18/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step [1m 34/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 50/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 61/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step[1m 73/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step[1m 88/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step[1m105/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step[1m122/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m141/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m158/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m177/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m194/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step[1m211/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 3ms/step[1m229/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step[1m248/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step[1m266/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 3ms/step[1m285/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step[1m304/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 (Shifted) Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🎯 Add Experiment Result 🎯

🔹 Experiment Results:

  #: m1
  Time: 12:28:58
  Layers-Count: 13
  Optimizer: Adam
  Fin-Test-Loss: 0.023941755294799805
  Fin-Test-Acc: 0.9922999739646912
  Shift-Test-Loss: 0.29281383752822876
  Shift-Test-Acc: 0.9199000000953674

🚀 Launching m1 (3/10) ...

🎯 Build Model 🎯

Model: "m1"
┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃ Layer (type)            ┃ Output Shape      ┃   Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ input_layer_2           │ (None, 28, 28, 1) │         0 │
│ (InputLayer)            │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_6 (Conv2D)       │ (None, 28, 28,    │       416 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_6 (ReLU)          │ (None, 28, 28,    │         0 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_6         │ (None, 14, 14,    │         0 │
│ (MaxPooling2D)          │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_7 (Conv2D)       │ (None, 14, 14,    │     4,640 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_7 (ReLU)          │ (None, 14, 14,    │         0 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_7         │ (None, 7, 7, 32)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_8 (Conv2D)       │ (None, 7, 7, 64)  │    18,496 │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_8 (ReLU)          │ (None, 7, 7, 64)  │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_8         │ (None, 4, 4, 64)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ flatten_2 (Flatten)     │ (None, 1024)      │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_4 (Dense)         │ (None, 128)       │   131,200 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_5 (Dense)         │ (None, 10)        │     1,290 │
└─────────────────────────┴───────────────────┴───────────┘
 Total params: 156,042 (609.54 KB)
 Trainable params: 156,042 (609.54 KB)
 Non-trainable params: 0 (0.00 B)

🔹 Inference Time:

0.011250 seconds (m1)

🎯 Train Model 🎯
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 

🎯 Evaluate Model 🎯
WARNING:absl:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.

🔹 Evaluation Result:

[0.0238680150359869, 0.9922000169754028]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m17s[0m 55ms/step[1m 18/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step  [1m 33/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 50/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 66/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 82/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 98/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m114/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m131/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m149/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m166/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m184/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m201/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step[1m219/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 3ms/step[1m237/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step[1m254/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 3ms/step[1m272/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step[1m291/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step[1m309/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🔹 (Shifted) Evaluation Result:

[0.25930219888687134, 0.9323999881744385]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m4s[0m 15ms/step[1m 18/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step [1m 35/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 53/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 71/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 89/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m105/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m123/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m141/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m159/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m177/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m197/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step[1m215/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 3ms/step[1m234/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step[1m252/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 3ms/step[1m271/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step[1m289/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step[1m308/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 (Shifted) Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🎯 Add Experiment Result 🎯

🔹 Experiment Results:

  #: m1
  Time: 12:34:49
  Layers-Count: 13
  Optimizer: Adam
  Fin-Test-Loss: 0.0238680150359869
  Fin-Test-Acc: 0.9922000169754028
  Shift-Test-Loss: 0.25930219888687134
  Shift-Test-Acc: 0.9323999881744385

🚀 Launching m1 (4/10) ...

🎯 Build Model 🎯

Model: "m1"
┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃ Layer (type)            ┃ Output Shape      ┃   Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ input_layer_3           │ (None, 28, 28, 1) │         0 │
│ (InputLayer)            │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_9 (Conv2D)       │ (None, 28, 28,    │       416 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_9 (ReLU)          │ (None, 28, 28,    │         0 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_9         │ (None, 14, 14,    │         0 │
│ (MaxPooling2D)          │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_10 (Conv2D)      │ (None, 14, 14,    │     4,640 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_10 (ReLU)         │ (None, 14, 14,    │         0 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_10        │ (None, 7, 7, 32)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_11 (Conv2D)      │ (None, 7, 7, 64)  │    18,496 │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_11 (ReLU)         │ (None, 7, 7, 64)  │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_11        │ (None, 4, 4, 64)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ flatten_3 (Flatten)     │ (None, 1024)      │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_6 (Dense)         │ (None, 128)       │   131,200 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_7 (Dense)         │ (None, 10)        │     1,290 │
└─────────────────────────┴───────────────────┴───────────┘
 Total params: 156,042 (609.54 KB)
 Trainable params: 156,042 (609.54 KB)
 Non-trainable params: 0 (0.00 B)

🔹 Inference Time:

0.013222 seconds (m1)

🎯 Train Model 🎯
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 

🎯 Evaluate Model 🎯
WARNING:absl:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.

🔹 Evaluation Result:

[0.02736729197204113, 0.9922000169754028]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m17s[0m 56ms/step[1m 16/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step  [1m 32/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 49/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 64/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 81/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 98/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m117/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m136/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m155/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m173/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m192/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step[1m210/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 3ms/step[1m226/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step[1m242/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step[1m261/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 3ms/step[1m277/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step[1m290/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step[1m303/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🔹 (Shifted) Evaluation Result:

[0.32805517315864563, 0.9107000231742859]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m5s[0m 16ms/step[1m 18/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step [1m 35/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 53/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 69/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 86/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m103/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m121/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m139/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m156/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m170/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m183/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m195/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step[1m209/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 3ms/step[1m222/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step[1m240/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step[1m258/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 3ms/step[1m276/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step[1m295/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 (Shifted) Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🎯 Add Experiment Result 🎯

🔹 Experiment Results:

  #: m1
  Time: 12:40:41
  Layers-Count: 13
  Optimizer: Adam
  Fin-Test-Loss: 0.02736729197204113
  Fin-Test-Acc: 0.9922000169754028
  Shift-Test-Loss: 0.32805517315864563
  Shift-Test-Acc: 0.9107000231742859

🚀 Launching m1 (5/10) ...

🎯 Build Model 🎯

Model: "m1"
┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃ Layer (type)            ┃ Output Shape      ┃   Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ input_layer_4           │ (None, 28, 28, 1) │         0 │
│ (InputLayer)            │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_12 (Conv2D)      │ (None, 28, 28,    │       416 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_12 (ReLU)         │ (None, 28, 28,    │         0 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_12        │ (None, 14, 14,    │         0 │
│ (MaxPooling2D)          │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_13 (Conv2D)      │ (None, 14, 14,    │     4,640 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_13 (ReLU)         │ (None, 14, 14,    │         0 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_13        │ (None, 7, 7, 32)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_14 (Conv2D)      │ (None, 7, 7, 64)  │    18,496 │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_14 (ReLU)         │ (None, 7, 7, 64)  │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_14        │ (None, 4, 4, 64)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ flatten_4 (Flatten)     │ (None, 1024)      │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_8 (Dense)         │ (None, 128)       │   131,200 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_9 (Dense)         │ (None, 10)        │     1,290 │
└─────────────────────────┴───────────────────┴───────────┘
 Total params: 156,042 (609.54 KB)
 Trainable params: 156,042 (609.54 KB)
 Non-trainable params: 0 (0.00 B)

🔹 Inference Time:

0.010975 seconds (m1)

🎯 Train Model 🎯
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 

🎯 Evaluate Model 🎯
WARNING:absl:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.

🔹 Evaluation Result:

[0.026937471702694893, 0.9918000102043152]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m18s[0m 60ms/step[1m 17/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step  [1m 29/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 4ms/step[1m 42/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 4ms/step[1m 55/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m1s[0m 4ms/step[1m 68/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step[1m 85/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step[1m104/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step[1m123/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m142/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m161/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m180/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m199/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step[1m219/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 3ms/step[1m237/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step[1m255/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 3ms/step[1m272/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step[1m289/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step[1m305/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🔹 (Shifted) Evaluation Result:

[0.31868913769721985, 0.9178000092506409]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m5s[0m 16ms/step[1m 16/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step [1m 32/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 50/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 68/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 86/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m103/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m121/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m138/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m151/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m166/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m180/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m194/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step[1m211/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 3ms/step[1m229/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step[1m246/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step[1m264/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 3ms/step[1m281/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step[1m299/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 (Shifted) Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🎯 Add Experiment Result 🎯

🔹 Experiment Results:

  #: m1
  Time: 12:46:30
  Layers-Count: 13
  Optimizer: Adam
  Fin-Test-Loss: 0.026937471702694893
  Fin-Test-Acc: 0.9918000102043152
  Shift-Test-Loss: 0.31868913769721985
  Shift-Test-Acc: 0.9178000092506409

🚀 Launching m1 (6/10) ...

🎯 Build Model 🎯

Model: "m1"
┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃ Layer (type)            ┃ Output Shape      ┃   Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ input_layer_5           │ (None, 28, 28, 1) │         0 │
│ (InputLayer)            │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_15 (Conv2D)      │ (None, 28, 28,    │       416 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_15 (ReLU)         │ (None, 28, 28,    │         0 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_15        │ (None, 14, 14,    │         0 │
│ (MaxPooling2D)          │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_16 (Conv2D)      │ (None, 14, 14,    │     4,640 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_16 (ReLU)         │ (None, 14, 14,    │         0 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_16        │ (None, 7, 7, 32)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_17 (Conv2D)      │ (None, 7, 7, 64)  │    18,496 │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_17 (ReLU)         │ (None, 7, 7, 64)  │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_17        │ (None, 4, 4, 64)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ flatten_5 (Flatten)     │ (None, 1024)      │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_10 (Dense)        │ (None, 128)       │   131,200 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_11 (Dense)        │ (None, 10)        │     1,290 │
└─────────────────────────┴───────────────────┴───────────┘
 Total params: 156,042 (609.54 KB)
 Trainable params: 156,042 (609.54 KB)
 Non-trainable params: 0 (0.00 B)

🔹 Inference Time:

0.012710 seconds (m1)

🎯 Train Model 🎯
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 

🎯 Evaluate Model 🎯
WARNING:absl:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.

🔹 Evaluation Result:

[0.030772943049669266, 0.9896000027656555]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m18s[0m 58ms/step[1m 16/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 3ms/step  [1m 32/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 48/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 63/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 76/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 88/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step[1m104/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step[1m122/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m142/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m161/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m180/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m199/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step[1m219/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 3ms/step[1m235/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step[1m253/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 3ms/step[1m270/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step[1m287/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step[1m304/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🔹 (Shifted) Evaluation Result:

[0.386802613735199, 0.8896999955177307]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m4s[0m 15ms/step[1m 16/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 4ms/step [1m 31/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 48/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 65/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 83/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m101/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m120/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m135/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m153/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m170/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m187/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m203/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step[1m221/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step[1m238/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step[1m256/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 3ms/step[1m274/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step[1m292/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step[1m310/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 (Shifted) Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🎯 Add Experiment Result 🎯

🔹 Experiment Results:

  #: m1
  Time: 12:52:16
  Layers-Count: 13
  Optimizer: Adam
  Fin-Test-Loss: 0.030772943049669266
  Fin-Test-Acc: 0.9896000027656555
  Shift-Test-Loss: 0.386802613735199
  Shift-Test-Acc: 0.8896999955177307

🚀 Launching m1 (7/10) ...

🎯 Build Model 🎯

Model: "m1"
┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃ Layer (type)            ┃ Output Shape      ┃   Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ input_layer_6           │ (None, 28, 28, 1) │         0 │
│ (InputLayer)            │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_18 (Conv2D)      │ (None, 28, 28,    │       416 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_18 (ReLU)         │ (None, 28, 28,    │         0 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_18        │ (None, 14, 14,    │         0 │
│ (MaxPooling2D)          │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_19 (Conv2D)      │ (None, 14, 14,    │     4,640 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_19 (ReLU)         │ (None, 14, 14,    │         0 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_19        │ (None, 7, 7, 32)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_20 (Conv2D)      │ (None, 7, 7, 64)  │    18,496 │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_20 (ReLU)         │ (None, 7, 7, 64)  │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_20        │ (None, 4, 4, 64)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ flatten_6 (Flatten)     │ (None, 1024)      │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_12 (Dense)        │ (None, 128)       │   131,200 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_13 (Dense)        │ (None, 10)        │     1,290 │
└─────────────────────────┴───────────────────┴───────────┘
 Total params: 156,042 (609.54 KB)
 Trainable params: 156,042 (609.54 KB)
 Non-trainable params: 0 (0.00 B)

🔹 Inference Time:

0.015259 seconds (m1)

🎯 Train Model 🎯
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 

🎯 Evaluate Model 🎯
WARNING:absl:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.

🔹 Evaluation Result:

[0.02763407863676548, 0.9914000034332275]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m19s[0m 63ms/step[1m 15/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 4ms/step  [1m 31/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 49/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 66/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 79/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 90/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m101/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step[1m113/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step[1m129/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step[1m146/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step[1m164/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m181/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m199/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step[1m216/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 3ms/step[1m234/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step[1m251/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 3ms/step[1m270/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step[1m287/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step[1m305/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🔹 (Shifted) Evaluation Result:

[0.3085791766643524, 0.9107999801635742]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m5s[0m 17ms/step[1m 17/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step [1m 33/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 49/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 65/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 82/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 97/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m115/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m132/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m150/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m168/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m187/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m205/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 3ms/step[1m224/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step[1m242/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step[1m261/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 3ms/step[1m279/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step[1m298/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 (Shifted) Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🎯 Add Experiment Result 🎯

🔹 Experiment Results:

  #: m1
  Time: 12:58:04
  Layers-Count: 13
  Optimizer: Adam
  Fin-Test-Loss: 0.02763407863676548
  Fin-Test-Acc: 0.9914000034332275
  Shift-Test-Loss: 0.3085791766643524
  Shift-Test-Acc: 0.9107999801635742

🚀 Launching m1 (8/10) ...

🎯 Build Model 🎯

Model: "m1"
┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃ Layer (type)            ┃ Output Shape      ┃   Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ input_layer_7           │ (None, 28, 28, 1) │         0 │
│ (InputLayer)            │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_21 (Conv2D)      │ (None, 28, 28,    │       416 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_21 (ReLU)         │ (None, 28, 28,    │         0 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_21        │ (None, 14, 14,    │         0 │
│ (MaxPooling2D)          │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_22 (Conv2D)      │ (None, 14, 14,    │     4,640 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_22 (ReLU)         │ (None, 14, 14,    │         0 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_22        │ (None, 7, 7, 32)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_23 (Conv2D)      │ (None, 7, 7, 64)  │    18,496 │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_23 (ReLU)         │ (None, 7, 7, 64)  │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_23        │ (None, 4, 4, 64)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ flatten_7 (Flatten)     │ (None, 1024)      │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_14 (Dense)        │ (None, 128)       │   131,200 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_15 (Dense)        │ (None, 10)        │     1,290 │
└─────────────────────────┴───────────────────┴───────────┘
 Total params: 156,042 (609.54 KB)
 Trainable params: 156,042 (609.54 KB)
 Non-trainable params: 0 (0.00 B)

🔹 Inference Time:

0.012535 seconds (m1)

🎯 Train Model 🎯
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 

🎯 Evaluate Model 🎯
WARNING:absl:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.

🔹 Evaluation Result:

[0.03502657264471054, 0.9904000163078308]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m16s[0m 54ms/step[1m 17/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step  [1m 33/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 50/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 67/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 84/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m102/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m123/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m143/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m163/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m182/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m201/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step[1m219/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 3ms/step[1m238/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step[1m255/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 3ms/step[1m275/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step[1m294/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🔹 (Shifted) Evaluation Result:

[0.36590123176574707, 0.9135000109672546]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m5s[0m 17ms/step[1m 16/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 4ms/step [1m 30/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 4ms/step[1m 43/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m1s[0m 4ms/step[1m 61/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 80/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 98/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m117/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m137/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m156/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m176/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m193/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step[1m213/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 3ms/step[1m231/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step[1m250/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step[1m269/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step[1m287/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step[1m306/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 (Shifted) Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🎯 Add Experiment Result 🎯

🔹 Experiment Results:

  #: m1
  Time: 13:03:49
  Layers-Count: 13
  Optimizer: Adam
  Fin-Test-Loss: 0.03502657264471054
  Fin-Test-Acc: 0.9904000163078308
  Shift-Test-Loss: 0.36590123176574707
  Shift-Test-Acc: 0.9135000109672546

🚀 Launching m1 (9/10) ...

🎯 Build Model 🎯

Model: "m1"
┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃ Layer (type)            ┃ Output Shape      ┃   Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ input_layer_8           │ (None, 28, 28, 1) │         0 │
│ (InputLayer)            │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_24 (Conv2D)      │ (None, 28, 28,    │       416 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_24 (ReLU)         │ (None, 28, 28,    │         0 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_24        │ (None, 14, 14,    │         0 │
│ (MaxPooling2D)          │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_25 (Conv2D)      │ (None, 14, 14,    │     4,640 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_25 (ReLU)         │ (None, 14, 14,    │         0 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_25        │ (None, 7, 7, 32)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_26 (Conv2D)      │ (None, 7, 7, 64)  │    18,496 │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_26 (ReLU)         │ (None, 7, 7, 64)  │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_26        │ (None, 4, 4, 64)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ flatten_8 (Flatten)     │ (None, 1024)      │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_16 (Dense)        │ (None, 128)       │   131,200 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_17 (Dense)        │ (None, 10)        │     1,290 │
└─────────────────────────┴───────────────────┴───────────┘
 Total params: 156,042 (609.54 KB)
 Trainable params: 156,042 (609.54 KB)
 Non-trainable params: 0 (0.00 B)

🔹 Inference Time:

0.012574 seconds (m1)

🎯 Train Model 🎯
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 

🎯 Evaluate Model 🎯
WARNING:absl:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.

🔹 Evaluation Result:

[0.028689315542578697, 0.9934999942779541]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m17s[0m 57ms/step[1m 17/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step  [1m 32/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 46/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 63/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 80/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 97/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m114/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m130/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m147/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m164/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m182/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m199/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step[1m217/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 3ms/step[1m232/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step[1m248/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step[1m262/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 3ms/step[1m277/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step[1m293/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step[1m311/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🔹 (Shifted) Evaluation Result:

[0.3455197215080261, 0.9307000041007996]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m4s[0m 15ms/step[1m 18/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step [1m 34/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 51/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 68/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 85/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m102/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m120/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m138/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m156/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m174/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m193/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step[1m213/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 3ms/step[1m232/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step[1m251/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 3ms/step[1m269/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step[1m288/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step[1m306/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 (Shifted) Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🎯 Add Experiment Result 🎯

🔹 Experiment Results:

  #: m1
  Time: 13:09:23
  Layers-Count: 13
  Optimizer: Adam
  Fin-Test-Loss: 0.028689315542578697
  Fin-Test-Acc: 0.9934999942779541
  Shift-Test-Loss: 0.3455197215080261
  Shift-Test-Acc: 0.9307000041007996

🚀 Launching m1 (10/10) ...

🎯 Build Model 🎯

Model: "m1"
┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃ Layer (type)            ┃ Output Shape      ┃   Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ input_layer_9           │ (None, 28, 28, 1) │         0 │
│ (InputLayer)            │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_27 (Conv2D)      │ (None, 28, 28,    │       416 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_27 (ReLU)         │ (None, 28, 28,    │         0 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_27        │ (None, 14, 14,    │         0 │
│ (MaxPooling2D)          │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_28 (Conv2D)      │ (None, 14, 14,    │     4,640 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_28 (ReLU)         │ (None, 14, 14,    │         0 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_28        │ (None, 7, 7, 32)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_29 (Conv2D)      │ (None, 7, 7, 64)  │    18,496 │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_29 (ReLU)         │ (None, 7, 7, 64)  │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_29        │ (None, 4, 4, 64)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ flatten_9 (Flatten)     │ (None, 1024)      │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_18 (Dense)        │ (None, 128)       │   131,200 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_19 (Dense)        │ (None, 10)        │     1,290 │
└─────────────────────────┴───────────────────┴───────────┘
 Total params: 156,042 (609.54 KB)
 Trainable params: 156,042 (609.54 KB)
 Non-trainable params: 0 (0.00 B)

🔹 Inference Time:

0.011081 seconds (m1)

🎯 Train Model 🎯
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 

🎯 Evaluate Model 🎯
WARNING:absl:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.

🔹 Evaluation Result:

[0.03508580103516579, 0.9883999824523926]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m17s[0m 55ms/step[1m 17/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step  [1m 34/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 53/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 71/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 89/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m108/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m128/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m147/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m167/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m186/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m206/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 3ms/step[1m225/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step[1m245/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step[1m263/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 3ms/step[1m283/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step[1m298/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step[1m306/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🔹 (Shifted) Evaluation Result:

[0.3421929180622101, 0.8981999754905701]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m4s[0m 16ms/step[1m 17/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step [1m 33/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 50/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 66/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 83/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m100/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m118/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m135/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m152/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m170/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m186/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m204/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 3ms/step[1m220/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step[1m239/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step[1m258/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 3ms/step[1m276/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step[1m295/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 (Shifted) Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🎯 Add Experiment Result 🎯

🔹 Experiment Results:

  #: m1
  Time: 13:14:53
  Layers-Count: 13
  Optimizer: Adam
  Fin-Test-Loss: 0.03508580103516579
  Fin-Test-Acc: 0.9883999824523926
  Shift-Test-Loss: 0.3421929180622101
  Shift-Test-Acc: 0.8981999754905701

🚀 Launching m2 (1/10) ...

🎯 Build Model 🎯

Model: "m2"
┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃ Layer (type)            ┃ Output Shape      ┃   Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ input_layer_10          │ (None, 28, 28, 1) │         0 │
│ (InputLayer)            │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_30 (Conv2D)      │ (None, 24, 24,    │       416 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_30 (ReLU)         │ (None, 24, 24,    │         0 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_30        │ (None, 12, 12,    │         0 │
│ (MaxPooling2D)          │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_31 (Conv2D)      │ (None, 10, 10,    │     4,640 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_31 (ReLU)         │ (None, 10, 10,    │         0 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_31        │ (None, 5, 5, 32)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_32 (Conv2D)      │ (None, 3, 3, 64)  │    18,496 │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_32 (ReLU)         │ (None, 3, 3, 64)  │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_32        │ (None, 1, 1, 64)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ flatten_10 (Flatten)    │ (None, 64)        │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_20 (Dense)        │ (None, 128)       │     8,320 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_21 (Dense)        │ (None, 10)        │     1,290 │
└─────────────────────────┴───────────────────┴───────────┘
 Total params: 33,162 (129.54 KB)
 Trainable params: 33,162 (129.54 KB)
 Non-trainable params: 0 (0.00 B)

🔹 Inference Time:

0.021691 seconds (m2)

🎯 Train Model 🎯
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 

🎯 Evaluate Model 🎯
WARNING:absl:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.

🔹 Evaluation Result:

[0.04285380616784096, 0.9886000156402588]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m19s[0m 61ms/step[1m 23/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step  [1m 45/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 69/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 92/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m119/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m137/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m156/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m174/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 2ms/step[1m196/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 2ms/step[1m222/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 2ms/step[1m245/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 2ms/step[1m273/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 2ms/step[1m300/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 2ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 2ms/step

🔹 Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🔹 (Shifted) Evaluation Result:

[0.5498769879341125, 0.8704000115394592]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m4s[0m 14ms/step[1m 25/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step [1m 48/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 72/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 96/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m122/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m147/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m172/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m195/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 2ms/step[1m221/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 2ms/step[1m246/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 2ms/step[1m273/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 2ms/step[1m300/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 2ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 2ms/step

🔹 (Shifted) Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🎯 Add Experiment Result 🎯

🔹 Experiment Results:

  #: m2
  Time: 13:18:21
  Layers-Count: 13
  Optimizer: Adam
  Fin-Test-Loss: 0.04285380616784096
  Fin-Test-Acc: 0.9886000156402588
  Shift-Test-Loss: 0.5498769879341125
  Shift-Test-Acc: 0.8704000115394592

🚀 Launching m2 (2/10) ...

🎯 Build Model 🎯

Model: "m2"
┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃ Layer (type)            ┃ Output Shape      ┃   Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ input_layer_11          │ (None, 28, 28, 1) │         0 │
│ (InputLayer)            │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_33 (Conv2D)      │ (None, 24, 24,    │       416 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_33 (ReLU)         │ (None, 24, 24,    │         0 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_33        │ (None, 12, 12,    │         0 │
│ (MaxPooling2D)          │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_34 (Conv2D)      │ (None, 10, 10,    │     4,640 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_34 (ReLU)         │ (None, 10, 10,    │         0 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_34        │ (None, 5, 5, 32)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_35 (Conv2D)      │ (None, 3, 3, 64)  │    18,496 │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_35 (ReLU)         │ (None, 3, 3, 64)  │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_35        │ (None, 1, 1, 64)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ flatten_11 (Flatten)    │ (None, 64)        │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_22 (Dense)        │ (None, 128)       │     8,320 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_23 (Dense)        │ (None, 10)        │     1,290 │
└─────────────────────────┴───────────────────┴───────────┘
 Total params: 33,162 (129.54 KB)
 Trainable params: 33,162 (129.54 KB)
 Non-trainable params: 0 (0.00 B)

🔹 Inference Time:

0.010192 seconds (m2)

🎯 Train Model 🎯
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 

🎯 Evaluate Model 🎯
WARNING:absl:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.

🔹 Evaluation Result:

[0.0403624065220356, 0.9901000261306763]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m16s[0m 54ms/step[1m 24/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step  [1m 47/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 71/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 94/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m118/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m141/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m166/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m192/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 2ms/step[1m219/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 2ms/step[1m245/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 2ms/step[1m274/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 2ms/step[1m301/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 2ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 2ms/step

🔹 Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🔹 (Shifted) Evaluation Result:

[0.5771578550338745, 0.8784999847412109]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m4s[0m 15ms/step[1m 25/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step [1m 48/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 72/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 96/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m119/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m142/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m166/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m189/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 2ms/step[1m210/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 2ms/step[1m228/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 2ms/step[1m249/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 2ms/step[1m275/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 2ms/step[1m299/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 2ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 2ms/step

🔹 (Shifted) Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🎯 Add Experiment Result 🎯

🔹 Experiment Results:

  #: m2
  Time: 13:21:49
  Layers-Count: 13
  Optimizer: Adam
  Fin-Test-Loss: 0.0403624065220356
  Fin-Test-Acc: 0.9901000261306763
  Shift-Test-Loss: 0.5771578550338745
  Shift-Test-Acc: 0.8784999847412109

🚀 Launching m2 (3/10) ...

🎯 Build Model 🎯

Model: "m2"
┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃ Layer (type)            ┃ Output Shape      ┃   Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ input_layer_12          │ (None, 28, 28, 1) │         0 │
│ (InputLayer)            │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_36 (Conv2D)      │ (None, 24, 24,    │       416 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_36 (ReLU)         │ (None, 24, 24,    │         0 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_36        │ (None, 12, 12,    │         0 │
│ (MaxPooling2D)          │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_37 (Conv2D)      │ (None, 10, 10,    │     4,640 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_37 (ReLU)         │ (None, 10, 10,    │         0 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_37        │ (None, 5, 5, 32)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_38 (Conv2D)      │ (None, 3, 3, 64)  │    18,496 │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_38 (ReLU)         │ (None, 3, 3, 64)  │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_38        │ (None, 1, 1, 64)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ flatten_12 (Flatten)    │ (None, 64)        │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_24 (Dense)        │ (None, 128)       │     8,320 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_25 (Dense)        │ (None, 10)        │     1,290 │
└─────────────────────────┴───────────────────┴───────────┘
 Total params: 33,162 (129.54 KB)
 Trainable params: 33,162 (129.54 KB)
 Non-trainable params: 0 (0.00 B)

🔹 Inference Time:

0.010336 seconds (m2)

🎯 Train Model 🎯
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 

🎯 Evaluate Model 🎯
WARNING:absl:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.

🔹 Evaluation Result:

[0.03860114514827728, 0.9894999861717224]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m17s[0m 55ms/step[1m 22/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step  [1m 44/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 66/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 89/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m113/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m138/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m163/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m187/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 2ms/step[1m212/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 2ms/step[1m236/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 2ms/step[1m260/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 2ms/step[1m283/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 2ms/step[1m308/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 2ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 2ms/step

🔹 Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🔹 (Shifted) Evaluation Result:

[0.5397979021072388, 0.8565000295639038]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m4s[0m 14ms/step[1m 24/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step [1m 46/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 73/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 98/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m124/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m147/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m174/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 2ms/step[1m198/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 2ms/step[1m226/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 2ms/step[1m251/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 2ms/step[1m280/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 2ms/step[1m308/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 2ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 2ms/step

🔹 (Shifted) Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🎯 Add Experiment Result 🎯

🔹 Experiment Results:

  #: m2
  Time: 13:25:15
  Layers-Count: 13
  Optimizer: Adam
  Fin-Test-Loss: 0.03860114514827728
  Fin-Test-Acc: 0.9894999861717224
  Shift-Test-Loss: 0.5397979021072388
  Shift-Test-Acc: 0.8565000295639038

🚀 Launching m2 (4/10) ...

🎯 Build Model 🎯

Model: "m2"
┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃ Layer (type)            ┃ Output Shape      ┃   Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ input_layer_13          │ (None, 28, 28, 1) │         0 │
│ (InputLayer)            │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_39 (Conv2D)      │ (None, 24, 24,    │       416 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_39 (ReLU)         │ (None, 24, 24,    │         0 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_39        │ (None, 12, 12,    │         0 │
│ (MaxPooling2D)          │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_40 (Conv2D)      │ (None, 10, 10,    │     4,640 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_40 (ReLU)         │ (None, 10, 10,    │         0 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_40        │ (None, 5, 5, 32)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_41 (Conv2D)      │ (None, 3, 3, 64)  │    18,496 │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_41 (ReLU)         │ (None, 3, 3, 64)  │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_41        │ (None, 1, 1, 64)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ flatten_13 (Flatten)    │ (None, 64)        │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_26 (Dense)        │ (None, 128)       │     8,320 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_27 (Dense)        │ (None, 10)        │     1,290 │
└─────────────────────────┴───────────────────┴───────────┘
 Total params: 33,162 (129.54 KB)
 Trainable params: 33,162 (129.54 KB)
 Non-trainable params: 0 (0.00 B)

🔹 Inference Time:

0.010932 seconds (m2)

🎯 Train Model 🎯
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 

🎯 Evaluate Model 🎯
WARNING:absl:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.

🔹 Evaluation Result:

[0.0402248352766037, 0.9901999831199646]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m16s[0m 54ms/step[1m 25/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step  [1m 48/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 73/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 96/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m121/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m145/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m169/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m194/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 2ms/step[1m218/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 2ms/step[1m243/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 2ms/step[1m266/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 2ms/step[1m288/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 2ms/step[1m312/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 2ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 2ms/step

🔹 Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🔹 (Shifted) Evaluation Result:

[0.6003069877624512, 0.8671000003814697]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m4s[0m 14ms/step[1m 27/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step [1m 52/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 78/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m105/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m133/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m158/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m185/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 2ms/step[1m212/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 2ms/step[1m240/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 2ms/step[1m263/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 2ms/step[1m290/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 2ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 2ms/step

🔹 (Shifted) Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🎯 Add Experiment Result 🎯

🔹 Experiment Results:

  #: m2
  Time: 13:28:39
  Layers-Count: 13
  Optimizer: Adam
  Fin-Test-Loss: 0.0402248352766037
  Fin-Test-Acc: 0.9901999831199646
  Shift-Test-Loss: 0.6003069877624512
  Shift-Test-Acc: 0.8671000003814697

🚀 Launching m2 (5/10) ...

🎯 Build Model 🎯

Model: "m2"
┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃ Layer (type)            ┃ Output Shape      ┃   Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ input_layer_14          │ (None, 28, 28, 1) │         0 │
│ (InputLayer)            │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_42 (Conv2D)      │ (None, 24, 24,    │       416 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_42 (ReLU)         │ (None, 24, 24,    │         0 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_42        │ (None, 12, 12,    │         0 │
│ (MaxPooling2D)          │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_43 (Conv2D)      │ (None, 10, 10,    │     4,640 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_43 (ReLU)         │ (None, 10, 10,    │         0 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_43        │ (None, 5, 5, 32)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_44 (Conv2D)      │ (None, 3, 3, 64)  │    18,496 │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_44 (ReLU)         │ (None, 3, 3, 64)  │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_44        │ (None, 1, 1, 64)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ flatten_14 (Flatten)    │ (None, 64)        │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_28 (Dense)        │ (None, 128)       │     8,320 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_29 (Dense)        │ (None, 10)        │     1,290 │
└─────────────────────────┴───────────────────┴───────────┘
 Total params: 33,162 (129.54 KB)
 Trainable params: 33,162 (129.54 KB)
 Non-trainable params: 0 (0.00 B)

🔹 Inference Time:

0.009688 seconds (m2)

🎯 Train Model 🎯
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 

🎯 Evaluate Model 🎯
WARNING:absl:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.

🔹 Evaluation Result:

[0.04234694689512253, 0.9879000186920166]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m16s[0m 54ms/step[1m 25/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step  [1m 47/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 74/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 99/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m128/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m155/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m181/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 2ms/step[1m207/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 2ms/step[1m233/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 2ms/step[1m260/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 2ms/step[1m285/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 2ms/step[1m310/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 2ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 2ms/step

🔹 Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🔹 (Shifted) Evaluation Result:

[0.5939480066299438, 0.8555999994277954]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m4s[0m 15ms/step[1m 21/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step [1m 45/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 72/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 99/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m128/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m156/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m179/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 2ms/step[1m206/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 2ms/step[1m232/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 2ms/step[1m259/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 2ms/step[1m286/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 2ms/step[1m312/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 2ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 2ms/step

🔹 (Shifted) Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🎯 Add Experiment Result 🎯

🔹 Experiment Results:

  #: m2
  Time: 13:32:03
  Layers-Count: 13
  Optimizer: Adam
  Fin-Test-Loss: 0.04234694689512253
  Fin-Test-Acc: 0.9879000186920166
  Shift-Test-Loss: 0.5939480066299438
  Shift-Test-Acc: 0.8555999994277954

🚀 Launching m2 (6/10) ...

🎯 Build Model 🎯

Model: "m2"
┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃ Layer (type)            ┃ Output Shape      ┃   Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ input_layer_15          │ (None, 28, 28, 1) │         0 │
│ (InputLayer)            │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_45 (Conv2D)      │ (None, 24, 24,    │       416 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_45 (ReLU)         │ (None, 24, 24,    │         0 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_45        │ (None, 12, 12,    │         0 │
│ (MaxPooling2D)          │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_46 (Conv2D)      │ (None, 10, 10,    │     4,640 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_46 (ReLU)         │ (None, 10, 10,    │         0 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_46        │ (None, 5, 5, 32)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_47 (Conv2D)      │ (None, 3, 3, 64)  │    18,496 │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_47 (ReLU)         │ (None, 3, 3, 64)  │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_47        │ (None, 1, 1, 64)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ flatten_15 (Flatten)    │ (None, 64)        │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_30 (Dense)        │ (None, 128)       │     8,320 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_31 (Dense)        │ (None, 10)        │     1,290 │
└─────────────────────────┴───────────────────┴───────────┘
 Total params: 33,162 (129.54 KB)
 Trainable params: 33,162 (129.54 KB)
 Non-trainable params: 0 (0.00 B)

🔹 Inference Time:

0.009820 seconds (m2)

🎯 Train Model 🎯
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 

🎯 Evaluate Model 🎯
WARNING:absl:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.

🔹 Evaluation Result:

[0.03681131824851036, 0.9901000261306763]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m17s[0m 55ms/step[1m 23/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step  [1m 45/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 69/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 93/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m119/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m143/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m167/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m191/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 2ms/step[1m216/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 2ms/step[1m240/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 2ms/step[1m266/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 2ms/step[1m292/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 2ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 2ms/step

🔹 Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🔹 (Shifted) Evaluation Result:

[0.5892053842544556, 0.8737999796867371]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m4s[0m 14ms/step[1m 27/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step [1m 51/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 76/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m100/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m125/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m150/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m176/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 2ms/step[1m201/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 2ms/step[1m226/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 2ms/step[1m251/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 2ms/step[1m276/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 2ms/step[1m303/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 2ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 2ms/step

🔹 (Shifted) Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🎯 Add Experiment Result 🎯

🔹 Experiment Results:

  #: m2
  Time: 13:35:29
  Layers-Count: 13
  Optimizer: Adam
  Fin-Test-Loss: 0.03681131824851036
  Fin-Test-Acc: 0.9901000261306763
  Shift-Test-Loss: 0.5892053842544556
  Shift-Test-Acc: 0.8737999796867371

🚀 Launching m2 (7/10) ...

🎯 Build Model 🎯

Model: "m2"
┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃ Layer (type)            ┃ Output Shape      ┃   Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ input_layer_16          │ (None, 28, 28, 1) │         0 │
│ (InputLayer)            │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_48 (Conv2D)      │ (None, 24, 24,    │       416 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_48 (ReLU)         │ (None, 24, 24,    │         0 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_48        │ (None, 12, 12,    │         0 │
│ (MaxPooling2D)          │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_49 (Conv2D)      │ (None, 10, 10,    │     4,640 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_49 (ReLU)         │ (None, 10, 10,    │         0 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_49        │ (None, 5, 5, 32)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_50 (Conv2D)      │ (None, 3, 3, 64)  │    18,496 │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_50 (ReLU)         │ (None, 3, 3, 64)  │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_50        │ (None, 1, 1, 64)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ flatten_16 (Flatten)    │ (None, 64)        │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_32 (Dense)        │ (None, 128)       │     8,320 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_33 (Dense)        │ (None, 10)        │     1,290 │
└─────────────────────────┴───────────────────┴───────────┘
 Total params: 33,162 (129.54 KB)
 Trainable params: 33,162 (129.54 KB)
 Non-trainable params: 0 (0.00 B)

🔹 Inference Time:

0.010948 seconds (m2)

🎯 Train Model 🎯
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 

🎯 Evaluate Model 🎯
WARNING:absl:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.

🔹 Evaluation Result:

[0.03775021806359291, 0.9890999794006348]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m16s[0m 54ms/step[1m 23/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step  [1m 46/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 70/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 93/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m118/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m142/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m167/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m192/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 2ms/step[1m216/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 2ms/step[1m242/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 2ms/step[1m269/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 2ms/step[1m293/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 2ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 2ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 2ms/step

🔹 Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🔹 (Shifted) Evaluation Result:

[0.5207005739212036, 0.8671000003814697]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m4s[0m 15ms/step[1m 25/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step [1m 50/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m 76/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m102/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m129/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m157/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m183/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 2ms/step[1m211/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 2ms/step[1m238/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 2ms/step[1m264/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 2ms/step[1m289/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 2ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 2ms/step

🔹 (Shifted) Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🎯 Add Experiment Result 🎯

🔹 Experiment Results:

  #: m2
  Time: 13:38:55
  Layers-Count: 13
  Optimizer: Adam
  Fin-Test-Loss: 0.03775021806359291
  Fin-Test-Acc: 0.9890999794006348
  Shift-Test-Loss: 0.5207005739212036
  Shift-Test-Acc: 0.8671000003814697

🚀 Launching m2 (8/10) ...

🎯 Build Model 🎯

Model: "m2"
┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃ Layer (type)            ┃ Output Shape      ┃   Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ input_layer_17          │ (None, 28, 28, 1) │         0 │
│ (InputLayer)            │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_51 (Conv2D)      │ (None, 24, 24,    │       416 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_51 (ReLU)         │ (None, 24, 24,    │         0 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_51        │ (None, 12, 12,    │         0 │
│ (MaxPooling2D)          │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_52 (Conv2D)      │ (None, 10, 10,    │     4,640 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_52 (ReLU)         │ (None, 10, 10,    │         0 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_52        │ (None, 5, 5, 32)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_53 (Conv2D)      │ (None, 3, 3, 64)  │    18,496 │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_53 (ReLU)         │ (None, 3, 3, 64)  │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_53        │ (None, 1, 1, 64)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ flatten_17 (Flatten)    │ (None, 64)        │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_34 (Dense)        │ (None, 128)       │     8,320 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_35 (Dense)        │ (None, 10)        │     1,290 │
└─────────────────────────┴───────────────────┴───────────┘
 Total params: 33,162 (129.54 KB)
 Trainable params: 33,162 (129.54 KB)
 Non-trainable params: 0 (0.00 B)

🔹 Inference Time:

0.009913 seconds (m2)

🎯 Train Model 🎯
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 

🎯 Evaluate Model 🎯
WARNING:absl:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.

🔹 Evaluation Result:

[0.039988696575164795, 0.9883999824523926]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m20s[0m 67ms/step[1m 22/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step  [1m 42/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 62/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 82/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 93/313[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m104/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m126/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m150/313[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m178/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m201/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step[1m228/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 2ms/step[1m254/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 2ms/step[1m277/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 2ms/step[1m301/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 2ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🔹 (Shifted) Evaluation Result:

[0.5211809277534485, 0.871399998664856]
[1m  1/313[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m4s[0m 16ms/step[1m 22/313[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 2ms/step [1m 42/313[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 58/313[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 73/313[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m 95/313[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m120/313[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m140/313[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 3ms/step[1m166/313[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 2ms/step[1m176/313[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step[1m192/313[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step[1m217/313[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 3ms/step[1m233/313[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step[1m249/313[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step[1m261/313[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 3ms/step[1m278/313[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step[1m293/313[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step[1m312/313[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step[1m313/313[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 3ms/step

🔹 (Shifted) Predictions:

Sample 1:
Predicted: 7, True: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Sample 2:
Predicted: 2, True: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Sample 3:
Predicted: 1, True: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 4:
Predicted: 0, True: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Sample 5:
Predicted: 4, True: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]

🎯 Add Experiment Result 🎯

🔹 Experiment Results:

  #: m2
  Time: 13:42:39
  Layers-Count: 13
  Optimizer: Adam
  Fin-Test-Loss: 0.039988696575164795
  Fin-Test-Acc: 0.9883999824523926
  Shift-Test-Loss: 0.5211809277534485
  Shift-Test-Acc: 0.871399998664856

🚀 Launching m2 (9/10) ...

🎯 Build Model 🎯

Model: "m2"
┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓
┃ Layer (type)            ┃ Output Shape      ┃   Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩
│ input_layer_18          │ (None, 28, 28, 1) │         0 │
│ (InputLayer)            │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_54 (Conv2D)      │ (None, 24, 24,    │       416 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_54 (ReLU)         │ (None, 24, 24,    │         0 │
│                         │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_54        │ (None, 12, 12,    │         0 │
│ (MaxPooling2D)          │ 16)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_55 (Conv2D)      │ (None, 10, 10,    │     4,640 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_55 (ReLU)         │ (None, 10, 10,    │         0 │
│                         │ 32)               │           │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_55        │ (None, 5, 5, 32)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ conv2d_56 (Conv2D)      │ (None, 3, 3, 64)  │    18,496 │
├─────────────────────────┼───────────────────┼───────────┤
│ re_lu_56 (ReLU)         │ (None, 3, 3, 64)  │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ max_pooling2d_56        │ (None, 1, 1, 64)  │         0 │
│ (MaxPooling2D)          │                   │           │
├─────────────────────────┼───────────────────┼───────────┤
│ flatten_18 (Flatten)    │ (None, 64)        │         0 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_36 (Dense)        │ (None, 128)       │     8,320 │
├─────────────────────────┼───────────────────┼───────────┤
│ dense_37 (Dense)        │ (None, 10)        │     1,290 │
└─────────────────────────┴───────────────────┴───────────┘
 Total params: 33,162 (129.54 KB)
 Trainable params: 33,162 (129.54 KB)
 Non-trainable params: 0 (0.00 B)

🔹 Inference Time:

0.027731 seconds (m2)

🎯 Train Model 🎯
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
